---
http_interactions:
- request:
    method: post
    uri: https://www.itu.int/net4/ITU-T/search/GlobalSearch/Search
    body:
      encoding: UTF-8
      string: '{"json":"{\"Input\":\"ITU-T H.264\",\"Start\":0,\"Rows\":10,\"SortBy\":\"RELEVANCE\",\"ExactPhrase\":false,\"CollectionName\":\"General\",\"CollectionGroup\":\"Recommendations\",\"Sector\":\"t\",\"Criterias\":[{\"Name\":\"Search
        in\",\"Criterias\":[{\"Selected\":false,\"Value\":\"\",\"Label\":\"Name\",\"Target\":\"/name_s\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0},{\"Selected\":false,\"Value\":\"\",\"Label\":\"Short
        description\",\"Target\":\"/short_description_s\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0},{\"Selected\":false,\"Value\":\"\",\"Label\":\"File
        content\",\"Target\":\"/file\",\"TypeName\":\"CHECKBOX\",\"GetCriteriaType\":0}],\"ShowCheckbox\":true,\"Selected\":false}],\"Topics\":\"\",\"ClientData\":{\"ip\":\"\"},\"Language\":\"en\",\"IP\":\"\",\"SearchType\":\"All\"}"}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '17474'
      Date:
      - Fri, 30 Oct 2020 17:11:41 GMT
      Content-Type:
      - application/json; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Set-Cookie:
      - GSCookie=QueryId=&CookieId=ZIMQeXTm2vHO4l4k+o0pO1u87Pz0pSX0ZZnhWpANXYlrICfXp86gyiFsuzVI0KtAS/KBEOQEmybnZCvLPqwfEQ==;
        domain=www.itu.int; expires=Sun, 30-Oct-2022 17:11:40 GMT; path=/
      - GSCookie=QueryId=3392944&CookieId=ZIMQeXTm2vHO4l4k+o0pO1u87Pz0pSX0ZZnhWpANXYlrICfXp86gyiFsuzVI0KtAS/KBEOQEmybnZCvLPqwfEQ==;
        domain=www.itu.int; expires=Sun, 30-Oct-2022 17:11:41 GMT; path=/
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJyZXN1bHRzIjpbeyJJZGVudGlmaWVyIjoiMTEuMTAwMi8xMDAwLzEzOTAzLWVuIiwiVGl0bGUiOiJJVFUtVCBILjI2NCAoVjEzKSAoMDYvMjAxOSk6IEFkdmFuY2VkIHZpZGVvIGNvZGluZyBmb3IgZ2VuZXJpYyBhdWRpb3Zpc3VhbCBzZXJ2aWNlcyIsIkNvbGxlY3Rpb24iOnsiTmFtZSI6IklUVS1UIFJlY29tbWVuZGF0aW9ucyIsIlRpdGxlIjoiSVRVLVQgUmVjb21tZW5kYXRpb25zIiwiRGVzY3JpcHRpb24iOiIiLCJTZWN0b3IiOiJJVFUtVCIsIkdyb3VwIjoiUmVjb21tZW5kYXRpb25zIn0sIlJlZGlyZWN0aW9uIjoiaHR0cHM6Ly93d3cuaXR1LmludC9uZXQ0L0lUVS1UL3NlYXJjaC9hcGkvcmVkaXJlY3Rpb24/ZGVzdD1odHRwJTNBJTJGJTJGaGFuZGxlLml0dS5pbnQlMkYxMS4xMDAyJTJGMTAwMCUyRjEzOTAzLWVuXHUwMDI2cG9zaXRpb249MTBcdTAwMjZwYWdlPTEiLCJMYW5ndWFnZSI6ImVuIiwiRGlyIjoibHRyIiwiUHJvcGVydGllcyI6W3siVGl0bGUiOiJQdWJsaWNhdGlvbiBkYXRlIiwiVmFsdWUiOiJTZXB0ZW1iZXIsIDIwMTkifV0sIkV4dHJhY3RGaWxlQ29udGVudCI6Ii4uLm5pbmcgSC44NzDigJNILjg3OSAgIEZvciBmdXJ0aGVyIGRldGFpbHMsIHBsZWFzZSByZWZlciB0byB0aGUgbGlzdCBvZiBJVFUtVCBSZWNvbW1lbmRhdGlvbnMuICAgICBSZWMuIElUVS1UIEguMjY0ICgwNi8yMDE5KSBpIFJlY29tbWVuZGF0aW9uIElUVS1UIEguMjY0IEFkdmFuY2VkIHZpZGVvIGNvZGluZyBmb3IgZ2VuZXJpYyBhdWRpb3Zpc3VhbCBzZXJ2aWNlcyBTdW1tYS4uLiIsIkxvY2F0aW9ucyI6W3siSWQiOiIxIiwiVHlwZSI6InBkZiIsIkhyZWYiOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTM5MDMtZW4lM0Zsb2NhdHQlM0RpZCUzQTElMjZhdXRoIiwiUmF3SHJlZiI6Imh0dHA6Ly93d3cuaXR1LmludC9yZWMvZG9sb2dpbl9wdWIuYXNwP2xhbmc9ZVx1MDAyNmlkPVQtUkVDLUguMjY0LTIwMTkwNi1JISFQREYtRVx1MDAyNnR5cGU9aXRlbXMiLCJJY29uIjoicGRmLWljb24ucG5nIn0seyJJZCI6IjIiLCJUeXBlIjoiZG9jIiwiSHJlZiI6Imh0dHBzOi8vd3d3Lml0dS5pbnQvbmV0NC9JVFUtVC9zZWFyY2gvYXBpL3JlZGlyZWN0aW9uP2Rlc3Q9aHR0cCUzQSUyRiUyRmhhbmRsZS5pdHUuaW50JTJGMTEuMTAwMiUyRjEwMDAlMkYxMzkwMy1lbiUzRmxvY2F0dCUzRGlkJTNBMiUyNmF1dGgiLCJSYXdIcmVmIjoiaHR0cDovL3d3dy5pdHUuaW50L3JlYy9kb2xvZ2luX3B1Yi5hc3A/bGFuZz1lXHUwMDI2aWQ9VC1SRUMtSC4yNjQtMjAxOTA2LUkhIU1TVy1FXHUwMDI2dHlwZT1pdGVtcyIsIkljb24iOiJkb2MtaWNvbi5wbmcifSx7IklkIjoiMyIsIlR5cGUiOiJlcHUiLCJIcmVmIjoiaHR0cHM6Ly93d3cuaXR1LmludC9uZXQ0L0lUVS1UL3NlYXJjaC9hcGkvcmVkaXJlY3Rpb24/ZGVzdD1odHRwJTNBJTJGJTJGaGFuZGxlLml0dS5pbnQlMkYxMS4xMDAyJTJGMTAwMCUyRjEzOTAzLWVuJTNGbG9jYXR0JTNEaWQlM0EzJTI2YXV0aCIsIlJhd0hyZWYiOiJodHRwOi8vd3d3Lml0dS5pbnQvcmVjL2RvbG9naW5fcHViLmFzcD9sYW5nPWVcdTAwMjZpZD1ULVJFQy1ILjI2NC0yMDE5MDYtSSEhRVBCLUVcdTAwMjZ0eXBlPWl0ZW1zIiwiSWNvbiI6ImVwdWItaWNvbi5wbmcifV0sIlRvcFJlc3VsdCI6ZmFsc2UsIldvcmRzIjp7IklUVS1UIjp0cnVlLCJILjI2NCI6dHJ1ZX0sIk1lZGlhIjp7IklkZW50aWZpZXIiOiIxMS4xMDAyLzEwMDAvMTM5MDMtZW4iLCJEYXRlIjoiU2VwdGVtYmVyLCAyMDE5IiwiVXJsIjpudWxsLCJOYW1lIjoiSVRVLVQgSC4yNjQgKFYxMykgKDA2LzIwMTkpIiwiUGFyZW50SGFuZGxlSUQiOiIiLCJQYXJlbnROYW1lIjpudWxsLCJUeXBlIjpudWxsLCJDb250ZW50VGV4dCI6bnVsbCwiSW1hZ2VVcmwiOm51bGwsIlRhZ3MiOltdfSwiV29yZHNNaXNzaW5nIjpmYWxzZSwiQ29sbGVjdGlvblR5cGVDU1NDbGFzcyI6ImxhYmVsLXQtc2VjdG9yIiwiTGFuZ3VhZ2VDU1NDbGFzcyI6ImxhYmVsLWVuIn0seyJJZGVudGlmaWVyIjoiMTEuMTAwMi8xMDAwLzEyNjQ0LWVuIiwiVGl0bGUiOiJJVFUtVCBILjI2NC4yICgwMi8yMDE2KTogUmVmZXJlbmNlIHNvZnR3YXJlIGZvciBJVFUtVCBILjI2NCBhZHZhbmNlZCB2aWRlbyBjb2RpbmciLCJDb2xsZWN0aW9uIjp7Ik5hbWUiOiJJVFUtVCBSZWNvbW1lbmRhdGlvbnMiLCJUaXRsZSI6IklUVS1UIFJlY29tbWVuZGF0aW9ucyIsIkRlc2NyaXB0aW9uIjoiIiwiU2VjdG9yIjoiSVRVLVQiLCJHcm91cCI6IlJlY29tbWVuZGF0aW9ucyJ9LCJSZWRpcmVjdGlvbiI6Imh0dHBzOi8vd3d3Lml0dS5pbnQvbmV0NC9JVFUtVC9zZWFyY2gvYXBpL3JlZGlyZWN0aW9uP2Rlc3Q9aHR0cCUzQSUyRiUyRmhhbmRsZS5pdHUuaW50JTJGMTEuMTAwMiUyRjEwMDAlMkYxMjY0NC1lblx1MDAyNnBvc2l0aW9uPTlcdTAwMjZwYWdlPTEiLCJMYW5ndWFnZSI6ImVuIiwiRGlyIjoibHRyIiwiUHJvcGVydGllcyI6W3siVGl0bGUiOiJQdWJsaWNhdGlvbiBkYXRlIiwiVmFsdWUiOiJNYXksIDIwMTYifV0sIkV4dHJhY3RGaWxlQ29udGVudCI6Ii4uLklBIFNZU1RFTVMgSW5mcmFzdHJ1Y3R1cmUgb2YgYXVkaW92aXN1YWwgc2VydmljZXMg4oCTIENvZGluZyBvZiBtb3ZpbmcgdmlkZW8gICBSZWZlcmVuY2Ugc29mdHdhcmUgZm9yIElUVS1UIEguMjY0IGFkdmFuY2VkIHZpZGVvIGNvZGluZyAgUmVjb21tZW5kYXRpb24gIElUVS1UICBILjI2NC4yICAgIElUVS1UIEgtU0VSSUVTIFJFQ09NTUVOREFUSU9OUyBBVURJT1ZJU1VBTC4uLiIsIkxvY2F0aW9ucyI6W3siSWQiOiIxIiwiVHlwZSI6InppcCIsIkhyZWYiOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTI2NDQtZW4lM0Zsb2NhdHQlM0RpZCUzQTElMjZhdXRoIiwiUmF3SHJlZiI6Imh0dHA6Ly93d3cuaXR1LmludC9yZWMvZG9sb2dpbl9wdWIuYXNwP2xhbmc9ZVx1MDAyNmlkPVQtUkVDLUguMjY0LjItMjAxNjAyLUkhIVNPRlQxLVpTVC1FXHUwMDI2dHlwZT1pdGVtcyIsIkljb24iOiJ6aXAtaWNvbi5wbmcifSx7IklkIjoiMiIsIlR5cGUiOiJwZGYiLCJIcmVmIjoiaHR0cHM6Ly93d3cuaXR1LmludC9uZXQ0L0lUVS1UL3NlYXJjaC9hcGkvcmVkaXJlY3Rpb24/ZGVzdD1odHRwJTNBJTJGJTJGaGFuZGxlLml0dS5pbnQlMkYxMS4xMDAyJTJGMTAwMCUyRjEyNjQ0LWVuJTNGbG9jYXR0JTNEaWQlM0EyJTI2YXV0aCIsIlJhd0hyZWYiOiJodHRwOi8vd3d3Lml0dS5pbnQvcmVjL2RvbG9naW5fcHViLmFzcD9sYW5nPWVcdTAwMjZpZD1ULVJFQy1ILjI2NC4yLTIwMTYwMi1JISFQREYtRVx1MDAyNnR5cGU9aXRlbXMiLCJJY29uIjoicGRmLWljb24ucG5nIn0seyJJZCI6IjMiLCJUeXBlIjoiZG9jIiwiSHJlZiI6Imh0dHBzOi8vd3d3Lml0dS5pbnQvbmV0NC9JVFUtVC9zZWFyY2gvYXBpL3JlZGlyZWN0aW9uP2Rlc3Q9aHR0cCUzQSUyRiUyRmhhbmRsZS5pdHUuaW50JTJGMTEuMTAwMiUyRjEwMDAlMkYxMjY0NC1lbiUzRmxvY2F0dCUzRGlkJTNBMyUyNmF1dGgiLCJSYXdIcmVmIjoiaHR0cDovL3d3dy5pdHUuaW50L3JlYy9kb2xvZ2luX3B1Yi5hc3A/bGFuZz1lXHUwMDI2aWQ9VC1SRUMtSC4yNjQuMi0yMDE2MDItSSEhTVNXLUVcdTAwMjZ0eXBlPWl0ZW1zIiwiSWNvbiI6ImRvYy1pY29uLnBuZyJ9XSwiVG9wUmVzdWx0IjpmYWxzZSwiV29yZHMiOnsiSVRVLVQiOnRydWUsIkguMjY0Ijp0cnVlfSwiTWVkaWEiOnsiSWRlbnRpZmllciI6IjExLjEwMDIvMTAwMC8xMjY0NC1lbiIsIkRhdGUiOiJNYXksIDIwMTYiLCJVcmwiOm51bGwsIk5hbWUiOiJJVFUtVCBILjI2NC4yICgwMi8yMDE2KSIsIlBhcmVudEhhbmRsZUlEIjoiIiwiUGFyZW50TmFtZSI6bnVsbCwiVHlwZSI6bnVsbCwiQ29udGVudFRleHQiOm51bGwsIkltYWdlVXJsIjpudWxsLCJUYWdzIjpbXX0sIldvcmRzTWlzc2luZyI6ZmFsc2UsIkNvbGxlY3Rpb25UeXBlQ1NTQ2xhc3MiOiJsYWJlbC10LXNlY3RvciIsIkxhbmd1YWdlQ1NTQ2xhc3MiOiJsYWJlbC1lbiJ9LHsiSWRlbnRpZmllciI6IjExLjEwMDIvMTAwMC8xMjY0My1lbiIsIlRpdGxlIjoiSVRVLVQgSC4yNjQuMSAoVjYpICgwMi8yMDE2KTogQ29uZm9ybWFuY2Ugc3BlY2lmaWNhdGlvbiBmb3IgSVRVLVQgSC4yNjQgYWR2YW5jZWQgdmlkZW8gY29kaW5nIiwiQ29sbGVjdGlvbiI6eyJOYW1lIjoiSVRVLVQgUmVjb21tZW5kYXRpb25zIiwiVGl0bGUiOiJJVFUtVCBSZWNvbW1lbmRhdGlvbnMiLCJEZXNjcmlwdGlvbiI6IiIsIlNlY3RvciI6IklUVS1UIiwiR3JvdXAiOiJSZWNvbW1lbmRhdGlvbnMifSwiUmVkaXJlY3Rpb24iOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTI2NDMtZW5cdTAwMjZwb3NpdGlvbj04XHUwMDI2cGFnZT0xIiwiTGFuZ3VhZ2UiOiJlbiIsIkRpciI6Imx0ciIsIlByb3BlcnRpZXMiOlt7IlRpdGxlIjoiUHVibGljYXRpb24gZGF0ZSIsIlZhbHVlIjoiSnVuZSwgMjAxNiJ9XSwiRXh0cmFjdEZpbGVDb250ZW50IjoiLi4uRU1TIEluZnJhc3RydWN0dXJlIG9mIGF1ZGlvdmlzdWFsIHNlcnZpY2VzIOKAkyBDb2Rpbmcgb2YgbW92aW5nIHZpZGVvICAgQ29uZm9ybWFuY2Ugc3BlY2lmaWNhdGlvbiBmb3IgSVRVLVQgSC4yNjQgYWR2YW5jZWQgdmlkZW8gY29kaW5nICBSZWNvbW1lbmRhdGlvbiAgSVRVLVQgIEguMjY0LjEgICAgSVRVLVQgSC1TRVJJRVMgUkVDT01NRU5EQVRJT05TIEFVRElPVklTVUFMLi4uIiwiTG9jYXRpb25zIjpbeyJJZCI6IjEiLCJUeXBlIjoicGRmIiwiSHJlZiI6Imh0dHBzOi8vd3d3Lml0dS5pbnQvbmV0NC9JVFUtVC9zZWFyY2gvYXBpL3JlZGlyZWN0aW9uP2Rlc3Q9aHR0cCUzQSUyRiUyRmhhbmRsZS5pdHUuaW50JTJGMTEuMTAwMiUyRjEwMDAlMkYxMjY0My1lbiUzRmxvY2F0dCUzRGlkJTNBMSUyNmF1dGgiLCJSYXdIcmVmIjoiaHR0cDovL3d3dy5pdHUuaW50L3JlYy9kb2xvZ2luX3B1Yi5hc3A/bGFuZz1lXHUwMDI2aWQ9VC1SRUMtSC4yNjQuMS0yMDE2MDItSSEhUERGLUVcdTAwMjZ0eXBlPWl0ZW1zIiwiSWNvbiI6InBkZi1pY29uLnBuZyJ9LHsiSWQiOiIyIiwiVHlwZSI6ImRvYyIsIkhyZWYiOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTI2NDMtZW4lM0Zsb2NhdHQlM0RpZCUzQTIlMjZhdXRoIiwiUmF3SHJlZiI6Imh0dHA6Ly93d3cuaXR1LmludC9yZWMvZG9sb2dpbl9wdWIuYXNwP2xhbmc9ZVx1MDAyNmlkPVQtUkVDLUguMjY0LjEtMjAxNjAyLUkhIU1TVy1FXHUwMDI2dHlwZT1pdGVtcyIsIkljb24iOiJkb2MtaWNvbi5wbmcifV0sIlRvcFJlc3VsdCI6ZmFsc2UsIldvcmRzIjp7IklUVS1UIjp0cnVlLCJILjI2NCI6dHJ1ZX0sIk1lZGlhIjp7IklkZW50aWZpZXIiOiIxMS4xMDAyLzEwMDAvMTI2NDMtZW4iLCJEYXRlIjoiSnVuZSwgMjAxNiIsIlVybCI6bnVsbCwiTmFtZSI6IklUVS1UIEguMjY0LjEgKFY2KSAoMDIvMjAxNikiLCJQYXJlbnRIYW5kbGVJRCI6IiIsIlBhcmVudE5hbWUiOm51bGwsIlR5cGUiOm51bGwsIkNvbnRlbnRUZXh0IjpudWxsLCJJbWFnZVVybCI6bnVsbCwiVGFncyI6W119LCJXb3Jkc01pc3NpbmciOmZhbHNlLCJDb2xsZWN0aW9uVHlwZUNTU0NsYXNzIjoibGFiZWwtdC1zZWN0b3IiLCJMYW5ndWFnZUNTU0NsYXNzIjoibGFiZWwtZW4ifSx7IklkZW50aWZpZXIiOiIxMS4xMDAyLzEwMDAvMTIyOTQtZW4iLCJUaXRsZSI6IklUVS1UIEguMjY0LjEgKDEwLzIwMTQpIHwgSVNPL0lFQyAgMTQ0OTYtNDogQ29uZm9ybWFuY2Ugc3BlY2lmaWNhdGlvbiBmb3IgSVRVLVQgSC4yNjQgYWR2YW5jZWQgdmlkZW8gY29kaW5nIiwiQ29sbGVjdGlvbiI6eyJOYW1lIjoiSVRVLVQgUmVjb21tZW5kYXRpb25zIiwiVGl0bGUiOiJJVFUtVCBSZWNvbW1lbmRhdGlvbnMiLCJEZXNjcmlwdGlvbiI6IiIsIlNlY3RvciI6IklUVS1UIiwiR3JvdXAiOiJSZWNvbW1lbmRhdGlvbnMifSwiUmVkaXJlY3Rpb24iOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTIyOTQtZW5cdTAwMjZwb3NpdGlvbj03XHUwMDI2cGFnZT0xIiwiTGFuZ3VhZ2UiOiJlbiIsIkRpciI6Imx0ciIsIlByb3BlcnRpZXMiOlt7IlRpdGxlIjoiUHVibGljYXRpb24gZGF0ZSIsIlZhbHVlIjoiQXByaWwsIDIwMTUifV0sIkV4dHJhY3RGaWxlQ29udGVudCI6Ii4uLkVNUyBJbmZyYXN0cnVjdHVyZSBvZiBhdWRpb3Zpc3VhbCBzZXJ2aWNlcyDigJMgQ29kaW5nIG9mIG1vdmluZyB2aWRlbyAgIENvbmZvcm1hbmNlIHNwZWNpZmljYXRpb24gZm9yIElUVS1UIEguMjY0IGFkdmFuY2VkIHZpZGVvIGNvZGluZyAgUmVjb21tZW5kYXRpb24gIElUVS1UICBILjI2NC4xICAgIElUVS1UIEgtU0VSSUVTIFJFQ09NTUVOREFUSU9OUyBBVURJT1ZJU1VBTC4uLiIsIkxvY2F0aW9ucyI6W3siSWQiOiIxIiwiVHlwZSI6InBkZiIsIkhyZWYiOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTIyOTQtZW4lM0Zsb2NhdHQlM0RpZCUzQTElMjZhdXRoIiwiUmF3SHJlZiI6Imh0dHA6Ly93d3cuaXR1LmludC9yZWMvZG9sb2dpbl9wdWIuYXNwP2xhbmc9ZVx1MDAyNmlkPVQtUkVDLUguMjY0LjEtMjAxNDEwLVMhIVBERi1FXHUwMDI2dHlwZT1pdGVtcyIsIkljb24iOiJwZGYtaWNvbi5wbmcifSx7IklkIjoiMiIsIlR5cGUiOiJkb2MiLCJIcmVmIjoiaHR0cHM6Ly93d3cuaXR1LmludC9uZXQ0L0lUVS1UL3NlYXJjaC9hcGkvcmVkaXJlY3Rpb24/ZGVzdD1odHRwJTNBJTJGJTJGaGFuZGxlLml0dS5pbnQlMkYxMS4xMDAyJTJGMTAwMCUyRjEyMjk0LWVuJTNGbG9jYXR0JTNEaWQlM0EyJTI2YXV0aCIsIlJhd0hyZWYiOiJodHRwOi8vd3d3Lml0dS5pbnQvcmVjL2RvbG9naW5fcHViLmFzcD9sYW5nPWVcdTAwMjZpZD1ULVJFQy1ILjI2NC4xLTIwMTQxMC1TISFNU1ctRVx1MDAyNnR5cGU9aXRlbXMiLCJJY29uIjoiZG9jLWljb24ucG5nIn1dLCJUb3BSZXN1bHQiOmZhbHNlLCJXb3JkcyI6eyJJVFUtVCI6dHJ1ZSwiSC4yNjQiOnRydWV9LCJNZWRpYSI6eyJJZGVudGlmaWVyIjoiMTEuMTAwMi8xMDAwLzEyMjk0LWVuIiwiRGF0ZSI6IkFwcmlsLCAyMDE1IiwiVXJsIjpudWxsLCJOYW1lIjoiSVRVLVQgSC4yNjQuMSAoMTAvMjAxNCkgfCBJU08vSUVDICAxNDQ5Ni00IiwiUGFyZW50SGFuZGxlSUQiOiIiLCJQYXJlbnROYW1lIjpudWxsLCJUeXBlIjpudWxsLCJDb250ZW50VGV4dCI6bnVsbCwiSW1hZ2VVcmwiOm51bGwsIlRhZ3MiOltdfSwiV29yZHNNaXNzaW5nIjpmYWxzZSwiQ29sbGVjdGlvblR5cGVDU1NDbGFzcyI6ImxhYmVsLXQtc2VjdG9yIiwiTGFuZ3VhZ2VDU1NDbGFzcyI6ImxhYmVsLWVuIn0seyJJZGVudGlmaWVyIjoiMTEuMTAwMi8xMDAwLzEyMjk1LWVuIiwiVGl0bGUiOiJJVFUtVCBILjI2NC4yICgwMi8yMDE1KSB8IElTTy9JRUMgIDE0NDk2LTU6IFJlZmVyZW5jZSBzb2Z0d2FyZSBmb3IgSVRVLVQgSC4yNjQgYWR2YW5jZWQgdmlkZW8gY29kaW5nIiwiQ29sbGVjdGlvbiI6eyJOYW1lIjoiSVRVLVQgUmVjb21tZW5kYXRpb25zIiwiVGl0bGUiOiJJVFUtVCBSZWNvbW1lbmRhdGlvbnMiLCJEZXNjcmlwdGlvbiI6IiIsIlNlY3RvciI6IklUVS1UIiwiR3JvdXAiOiJSZWNvbW1lbmRhdGlvbnMifSwiUmVkaXJlY3Rpb24iOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTIyOTUtZW5cdTAwMjZwb3NpdGlvbj02XHUwMDI2cGFnZT0xIiwiTGFuZ3VhZ2UiOiJlbiIsIkRpciI6Imx0ciIsIlByb3BlcnRpZXMiOlt7IlRpdGxlIjoiUHVibGljYXRpb24gZGF0ZSIsIlZhbHVlIjoiRmVicnVhcnksIDIwMTUifV0sIkV4dHJhY3RGaWxlQ29udGVudCI6IiIsIkxvY2F0aW9ucyI6W3siSWQiOiIxIiwiVHlwZSI6InppcCIsIkhyZWYiOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTIyOTUtZW4lM0Zsb2NhdHQlM0RpZCUzQTElMjZhdXRoIiwiUmF3SHJlZiI6Imh0dHA6Ly93d3cuaXR1LmludC9yZWMvZG9sb2dpbl9wdWIuYXNwP2xhbmc9ZVx1MDAyNmlkPVQtUkVDLUguMjY0LjItMjAxNTAyLVMhIVNPRlQtWlNULUVcdTAwMjZ0eXBlPWl0ZW1zIiwiSWNvbiI6InppcC1pY29uLnBuZyJ9XSwiVG9wUmVzdWx0IjpmYWxzZSwiV29yZHMiOnsiSVRVLVQiOnRydWUsIkguMjY0Ijp0cnVlfSwiTWVkaWEiOnsiSWRlbnRpZmllciI6IjExLjEwMDIvMTAwMC8xMjI5NS1lbiIsIkRhdGUiOiJGZWJydWFyeSwgMjAxNSIsIlVybCI6bnVsbCwiTmFtZSI6IklUVS1UIEguMjY0LjIgKDAyLzIwMTUpIHwgSVNPL0lFQyAgMTQ0OTYtNSIsIlBhcmVudEhhbmRsZUlEIjoiIiwiUGFyZW50TmFtZSI6bnVsbCwiVHlwZSI6bnVsbCwiQ29udGVudFRleHQiOm51bGwsIkltYWdlVXJsIjpudWxsLCJUYWdzIjpbXX0sIldvcmRzTWlzc2luZyI6ZmFsc2UsIkNvbGxlY3Rpb25UeXBlQ1NTQ2xhc3MiOiJsYWJlbC10LXNlY3RvciIsIkxhbmd1YWdlQ1NTQ2xhc3MiOiJsYWJlbC1lbiJ9LHsiSWRlbnRpZmllciI6IjExLjEwMDIvMTAwMC8xMTQ2Ny1lbiIsIlRpdGxlIjoiSVRVLVQgSC4yNjQuMSAoMDEvMjAxMikgfCBJU08vSUVDICAxNDQ5Ni00OiBDb25mb3JtYW5jZSBzcGVjaWZpY2F0aW9uIGZvciBJVFUtVCBILjI2NCBhZHZhbmNlZCB2aWRlbyBjb2RpbmciLCJDb2xsZWN0aW9uIjp7Ik5hbWUiOiJJVFUtVCBSZWNvbW1lbmRhdGlvbnMiLCJUaXRsZSI6IklUVS1UIFJlY29tbWVuZGF0aW9ucyIsIkRlc2NyaXB0aW9uIjoiIiwiU2VjdG9yIjoiSVRVLVQiLCJHcm91cCI6IlJlY29tbWVuZGF0aW9ucyJ9LCJSZWRpcmVjdGlvbiI6Imh0dHBzOi8vd3d3Lml0dS5pbnQvbmV0NC9JVFUtVC9zZWFyY2gvYXBpL3JlZGlyZWN0aW9uP2Rlc3Q9aHR0cCUzQSUyRiUyRmhhbmRsZS5pdHUuaW50JTJGMTEuMTAwMiUyRjEwMDAlMkYxMTQ2Ny1lblx1MDAyNnBvc2l0aW9uPTVcdTAwMjZwYWdlPTEiLCJMYW5ndWFnZSI6ImVuIiwiRGlyIjoibHRyIiwiUHJvcGVydGllcyI6W3siVGl0bGUiOiJQdWJsaWNhdGlvbiBkYXRlIiwiVmFsdWUiOiJKdW5lLCAyMDEyIn1dLCJFeHRyYWN0RmlsZUNvbnRlbnQiOiIuLi5URU1TSW5mcmFzdHJ1Y3R1cmUgb2YgYXVkaW92aXN1YWwgc2VydmljZXMg4oCTIENvZGluZyBvZiBtb3ZpbmcgdmlkZW8gICBDb25mb3JtYW5jZSBzcGVjaWZpY2F0aW9uIGZvciBJVFUtVCBILjI2NCBhZHZhbmNlZCB2aWRlbyBjb2RpbmcgIFJlY29tbWVuZGF0aW9uICBJVFUtVCAgSC4yNjQuMSAgICBJVFUtVCBILVNFUklFUyBSRUNPTU1FTkRBVElPTlMgQVVESU9WSVNVQUwuLi4iLCJMb2NhdGlvbnMiOlt7IklkIjoiMSIsIlR5cGUiOiJwZGYiLCJIcmVmIjoiaHR0cHM6Ly93d3cuaXR1LmludC9uZXQ0L0lUVS1UL3NlYXJjaC9hcGkvcmVkaXJlY3Rpb24/ZGVzdD1odHRwJTNBJTJGJTJGaGFuZGxlLml0dS5pbnQlMkYxMS4xMDAyJTJGMTAwMCUyRjExNDY3LWVuJTNGbG9jYXR0JTNEaWQlM0ExJTI2YXV0aCIsIlJhd0hyZWYiOiJodHRwOi8vd3d3Lml0dS5pbnQvcmVjL2RvbG9naW5fcHViLmFzcD9sYW5nPWVcdTAwMjZpZD1ULVJFQy1ILjI2NC4xLTIwMTIwMS1TISFQREYtRVx1MDAyNnR5cGU9aXRlbXMiLCJJY29uIjoicGRmLWljb24ucG5nIn0seyJJZCI6IjIiLCJUeXBlIjoiZG9jIiwiSHJlZiI6Imh0dHBzOi8vd3d3Lml0dS5pbnQvbmV0NC9JVFUtVC9zZWFyY2gvYXBpL3JlZGlyZWN0aW9uP2Rlc3Q9aHR0cCUzQSUyRiUyRmhhbmRsZS5pdHUuaW50JTJGMTEuMTAwMiUyRjEwMDAlMkYxMTQ2Ny1lbiUzRmxvY2F0dCUzRGlkJTNBMiUyNmF1dGgiLCJSYXdIcmVmIjoiaHR0cDovL3d3dy5pdHUuaW50L3JlYy9kb2xvZ2luX3B1Yi5hc3A/bGFuZz1lXHUwMDI2aWQ9VC1SRUMtSC4yNjQuMS0yMDEyMDEtUyEhTVNXLUVcdTAwMjZ0eXBlPWl0ZW1zIiwiSWNvbiI6ImRvYy1pY29uLnBuZyJ9XSwiVG9wUmVzdWx0IjpmYWxzZSwiV29yZHMiOnsiSVRVLVQiOnRydWUsIkguMjY0Ijp0cnVlfSwiTWVkaWEiOnsiSWRlbnRpZmllciI6IjExLjEwMDIvMTAwMC8xMTQ2Ny1lbiIsIkRhdGUiOiJKdW5lLCAyMDEyIiwiVXJsIjpudWxsLCJOYW1lIjoiSVRVLVQgSC4yNjQuMSAoMDEvMjAxMikgfCBJU08vSUVDICAxNDQ5Ni00IiwiUGFyZW50SGFuZGxlSUQiOiIiLCJQYXJlbnROYW1lIjpudWxsLCJUeXBlIjpudWxsLCJDb250ZW50VGV4dCI6bnVsbCwiSW1hZ2VVcmwiOm51bGwsIlRhZ3MiOltdfSwiV29yZHNNaXNzaW5nIjpmYWxzZSwiQ29sbGVjdGlvblR5cGVDU1NDbGFzcyI6ImxhYmVsLXQtc2VjdG9yIiwiTGFuZ3VhZ2VDU1NDbGFzcyI6ImxhYmVsLWVuIn0seyJJZGVudGlmaWVyIjoiMTEuMTAwMi8xMDAwLzExNDY4LWVuIiwiVGl0bGUiOiJJVFUtVCBILjI2NC4yICgwMS8yMDEyKSB8IElTTy9JRUMgIDE0NDk2LTU6IFJlZmVyZW5jZSBzb2Z0d2FyZSBmb3IgSVRVLVQgSC4yNjQgYWR2YW5jZWQgdmlkZW8gY29kaW5nIiwiQ29sbGVjdGlvbiI6eyJOYW1lIjoiSVRVLVQgUmVjb21tZW5kYXRpb25zIiwiVGl0bGUiOiJJVFUtVCBSZWNvbW1lbmRhdGlvbnMiLCJEZXNjcmlwdGlvbiI6IiIsIlNlY3RvciI6IklUVS1UIiwiR3JvdXAiOiJSZWNvbW1lbmRhdGlvbnMifSwiUmVkaXJlY3Rpb24iOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTE0NjgtZW5cdTAwMjZwb3NpdGlvbj00XHUwMDI2cGFnZT0xIiwiTGFuZ3VhZ2UiOiJlbiIsIkRpciI6Imx0ciIsIlByb3BlcnRpZXMiOlt7IlRpdGxlIjoiUHVibGljYXRpb24gZGF0ZSIsIlZhbHVlIjoiSmFudWFyeSwgMjAxMiJ9XSwiRXh0cmFjdEZpbGVDb250ZW50IjoiIiwiTG9jYXRpb25zIjpbeyJJZCI6IjEiLCJUeXBlIjoiemlwIiwiSHJlZiI6Imh0dHBzOi8vd3d3Lml0dS5pbnQvbmV0NC9JVFUtVC9zZWFyY2gvYXBpL3JlZGlyZWN0aW9uP2Rlc3Q9aHR0cCUzQSUyRiUyRmhhbmRsZS5pdHUuaW50JTJGMTEuMTAwMiUyRjEwMDAlMkYxMTQ2OC1lbiUzRmxvY2F0dCUzRGlkJTNBMSUyNmF1dGgiLCJSYXdIcmVmIjoiaHR0cDovL3d3dy5pdHUuaW50L3JlYy9kb2xvZ2luX3B1Yi5hc3A/bGFuZz1lXHUwMDI2aWQ9VC1SRUMtSC4yNjQuMi0yMDEyMDEtUyEhU09GVC1aU1QtRVx1MDAyNnR5cGU9aXRlbXMiLCJJY29uIjoiemlwLWljb24ucG5nIn1dLCJUb3BSZXN1bHQiOmZhbHNlLCJXb3JkcyI6eyJJVFUtVCI6dHJ1ZSwiSC4yNjQiOnRydWV9LCJNZWRpYSI6eyJJZGVudGlmaWVyIjoiMTEuMTAwMi8xMDAwLzExNDY4LWVuIiwiRGF0ZSI6IkphbnVhcnksIDIwMTIiLCJVcmwiOm51bGwsIk5hbWUiOiJJVFUtVCBILjI2NC4yICgwMS8yMDEyKSB8IElTTy9JRUMgIDE0NDk2LTUiLCJQYXJlbnRIYW5kbGVJRCI6IiIsIlBhcmVudE5hbWUiOm51bGwsIlR5cGUiOm51bGwsIkNvbnRlbnRUZXh0IjpudWxsLCJJbWFnZVVybCI6bnVsbCwiVGFncyI6W119LCJXb3Jkc01pc3NpbmciOmZhbHNlLCJDb2xsZWN0aW9uVHlwZUNTU0NsYXNzIjoibGFiZWwtdC1zZWN0b3IiLCJMYW5ndWFnZUNTU0NsYXNzIjoibGFiZWwtZW4ifSx7IklkZW50aWZpZXIiOiIxMS4xMDAyLzEwMDAvMTA2MzYtZW4iLCJUaXRsZSI6IklUVS1UIEguMjY0LjEgKDA0LzIwMTApIHwgSVNPL0lFQyAgMTQ0OTYtNDogQ29uZm9ybWFuY2Ugc3BlY2lmaWNhdGlvbiBmb3IgSVRVLVQgSC4yNjQgYWR2YW5jZWQgdmlkZW8gY29kaW5nIiwiQ29sbGVjdGlvbiI6eyJOYW1lIjoiSVRVLVQgUmVjb21tZW5kYXRpb25zIiwiVGl0bGUiOiJJVFUtVCBSZWNvbW1lbmRhdGlvbnMiLCJEZXNjcmlwdGlvbiI6IiIsIlNlY3RvciI6IklUVS1UIiwiR3JvdXAiOiJSZWNvbW1lbmRhdGlvbnMifSwiUmVkaXJlY3Rpb24iOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTA2MzYtZW5cdTAwMjZwb3NpdGlvbj0zXHUwMDI2cGFnZT0xIiwiTGFuZ3VhZ2UiOiJlbiIsIkRpciI6Imx0ciIsIlByb3BlcnRpZXMiOlt7IlRpdGxlIjoiUHVibGljYXRpb24gZGF0ZSIsIlZhbHVlIjoiQXVndXN0LCAyMDEwIn1dLCJFeHRyYWN0RmlsZUNvbnRlbnQiOiIuLi5URU1TSW5mcmFzdHJ1Y3R1cmUgb2YgYXVkaW92aXN1YWwgc2VydmljZXMg4oCTIENvZGluZyBvZiBtb3ZpbmcgdmlkZW8gICBDb25mb3JtYW5jZSBzcGVjaWZpY2F0aW9uIGZvciBJVFUtVCBILjI2NCBhZHZhbmNlZCB2aWRlbyBjb2RpbmcgIFJlY29tbWVuZGF0aW9uICBJVFUtVCAgSC4yNjQuMSAgICBJVFUtVCAgSC1TRVJJRVMgIFJFQ09NTUVOREFUSU9OUyBBVURJT1ZJU1UuLi4iLCJMb2NhdGlvbnMiOlt7IklkIjoiMSIsIlR5cGUiOiJwZGYiLCJIcmVmIjoiaHR0cHM6Ly93d3cuaXR1LmludC9uZXQ0L0lUVS1UL3NlYXJjaC9hcGkvcmVkaXJlY3Rpb24/ZGVzdD1odHRwJTNBJTJGJTJGaGFuZGxlLml0dS5pbnQlMkYxMS4xMDAyJTJGMTAwMCUyRjEwNjM2LWVuJTNGbG9jYXR0JTNEaWQlM0ExJTI2YXV0aCIsIlJhd0hyZWYiOiJodHRwOi8vd3d3Lml0dS5pbnQvcmVjL2RvbG9naW5fcHViLmFzcD9sYW5nPWVcdTAwMjZpZD1ULVJFQy1ILjI2NC4xLTIwMTAwNC1TISFQREYtRVx1MDAyNnR5cGU9aXRlbXMiLCJJY29uIjoicGRmLWljb24ucG5nIn0seyJJZCI6IjIiLCJUeXBlIjoiZG9jIiwiSHJlZiI6Imh0dHBzOi8vd3d3Lml0dS5pbnQvbmV0NC9JVFUtVC9zZWFyY2gvYXBpL3JlZGlyZWN0aW9uP2Rlc3Q9aHR0cCUzQSUyRiUyRmhhbmRsZS5pdHUuaW50JTJGMTEuMTAwMiUyRjEwMDAlMkYxMDYzNi1lbiUzRmxvY2F0dCUzRGlkJTNBMiUyNmF1dGgiLCJSYXdIcmVmIjoiaHR0cDovL3d3dy5pdHUuaW50L3JlYy9kb2xvZ2luX3B1Yi5hc3A/bGFuZz1lXHUwMDI2aWQ9VC1SRUMtSC4yNjQuMS0yMDEwMDQtUyEhTVNXLUVcdTAwMjZ0eXBlPWl0ZW1zIiwiSWNvbiI6ImRvYy1pY29uLnBuZyJ9XSwiVG9wUmVzdWx0IjpmYWxzZSwiV29yZHMiOnsiSVRVLVQiOnRydWUsIkguMjY0Ijp0cnVlfSwiTWVkaWEiOnsiSWRlbnRpZmllciI6IjExLjEwMDIvMTAwMC8xMDYzNi1lbiIsIkRhdGUiOiJBdWd1c3QsIDIwMTAiLCJVcmwiOm51bGwsIk5hbWUiOiJJVFUtVCBILjI2NC4xICgwNC8yMDEwKSB8IElTTy9JRUMgIDE0NDk2LTQiLCJQYXJlbnRIYW5kbGVJRCI6IiIsIlBhcmVudE5hbWUiOm51bGwsIlR5cGUiOm51bGwsIkNvbnRlbnRUZXh0IjpudWxsLCJJbWFnZVVybCI6bnVsbCwiVGFncyI6W119LCJXb3Jkc01pc3NpbmciOmZhbHNlLCJDb2xsZWN0aW9uVHlwZUNTU0NsYXNzIjoibGFiZWwtdC1zZWN0b3IiLCJMYW5ndWFnZUNTU0NsYXNzIjoibGFiZWwtZW4ifSx7IklkZW50aWZpZXIiOiIxMS4xMDAyLzEwMDAvMTE4MzAtZW4iLCJUaXRsZSI6IklUVS1UIEguMjY0ICgwNC8yMDEzKSB8IElTTy9JRUMgIDE0NDk2LTEwOiBBZHZhbmNlZCB2aWRlbyBjb2RpbmcgZm9yIGdlbmVyaWMgYXVkaW92aXN1YWwgc2VydmljZXMiLCJDb2xsZWN0aW9uIjp7Ik5hbWUiOiJJVFUtVCBSZWNvbW1lbmRhdGlvbnMiLCJUaXRsZSI6IklUVS1UIFJlY29tbWVuZGF0aW9ucyIsIkRlc2NyaXB0aW9uIjoiIiwiU2VjdG9yIjoiSVRVLVQiLCJHcm91cCI6IlJlY29tbWVuZGF0aW9ucyJ9LCJSZWRpcmVjdGlvbiI6Imh0dHBzOi8vd3d3Lml0dS5pbnQvbmV0NC9JVFUtVC9zZWFyY2gvYXBpL3JlZGlyZWN0aW9uP2Rlc3Q9aHR0cCUzQSUyRiUyRmhhbmRsZS5pdHUuaW50JTJGMTEuMTAwMiUyRjEwMDAlMkYxMTgzMC1lblx1MDAyNnBvc2l0aW9uPTJcdTAwMjZwYWdlPTEiLCJMYW5ndWFnZSI6ImVuIiwiRGlyIjoibHRyIiwiUHJvcGVydGllcyI6W3siVGl0bGUiOiJQdWJsaWNhdGlvbiBkYXRlIiwiVmFsdWUiOiJKdW5lLCAyMDEzIn1dLCJFeHRyYWN0RmlsZUNvbnRlbnQiOiIuLi5hZ2UgSC43ODDigJNILjc4OSAgIEZvciBmdXJ0aGVyIGRldGFpbHMsIHBsZWFzZSByZWZlciB0byB0aGUgbGlzdCBvZiBJVFUtVCBSZWNvbW1lbmRhdGlvbnMuICAgICAgUmVjLiBJVFUtVCBILjI2NCAoMDQvMjAxMykgaSBSZWNvbW1lbmRhdGlvbiBJVFUtVCBILjI2NCBBZHZhbmNlZCB2aWRlbyBjb2RpbmcgZm9yIGdlbmVyaWMgYXVkaW92aXN1YWwgc2VydmljZXMgICBTdW0uLi4iLCJMb2NhdGlvbnMiOlt7IklkIjoiMSIsIlR5cGUiOiJwZGYiLCJIcmVmIjoiaHR0cHM6Ly93d3cuaXR1LmludC9uZXQ0L0lUVS1UL3NlYXJjaC9hcGkvcmVkaXJlY3Rpb24/ZGVzdD1odHRwJTNBJTJGJTJGaGFuZGxlLml0dS5pbnQlMkYxMS4xMDAyJTJGMTAwMCUyRjExODMwLWVuJTNGbG9jYXR0JTNEaWQlM0ExJTI2YXV0aCIsIlJhd0hyZWYiOiJodHRwOi8vd3d3Lml0dS5pbnQvcmVjL2RvbG9naW5fcHViLmFzcD9sYW5nPWVcdTAwMjZpZD1ULVJFQy1ILjI2NC0yMDEzMDQtUyEhUERGLUVcdTAwMjZ0eXBlPWl0ZW1zIiwiSWNvbiI6InBkZi1pY29uLnBuZyJ9LHsiSWQiOiIyIiwiVHlwZSI6ImRvYyIsIkhyZWYiOiJodHRwczovL3d3dy5pdHUuaW50L25ldDQvSVRVLVQvc2VhcmNoL2FwaS9yZWRpcmVjdGlvbj9kZXN0PWh0dHAlM0ElMkYlMkZoYW5kbGUuaXR1LmludCUyRjExLjEwMDIlMkYxMDAwJTJGMTE4MzAtZW4lM0Zsb2NhdHQlM0RpZCUzQTIlMjZhdXRoIiwiUmF3SHJlZiI6Imh0dHA6Ly93d3cuaXR1LmludC9yZWMvZG9sb2dpbl9wdWIuYXNwP2xhbmc9ZVx1MDAyNmlkPVQtUkVDLUguMjY0LTIwMTMwNC1TISFNU1ctRVx1MDAyNnR5cGU9aXRlbXMiLCJJY29uIjoiZG9jLWljb24ucG5nIn1dLCJUb3BSZXN1bHQiOmZhbHNlLCJXb3JkcyI6eyJJVFUtVCI6dHJ1ZSwiSC4yNjQiOnRydWV9LCJNZWRpYSI6eyJJZGVudGlmaWVyIjoiMTEuMTAwMi8xMDAwLzExODMwLWVuIiwiRGF0ZSI6Ikp1bmUsIDIwMTMiLCJVcmwiOm51bGwsIk5hbWUiOiJJVFUtVCBILjI2NCAoMDQvMjAxMykgfCBJU08vSUVDICAxNDQ5Ni0xMCIsIlBhcmVudEhhbmRsZUlEIjoiIiwiUGFyZW50TmFtZSI6bnVsbCwiVHlwZSI6bnVsbCwiQ29udGVudFRleHQiOm51bGwsIkltYWdlVXJsIjpudWxsLCJUYWdzIjpbXX0sIldvcmRzTWlzc2luZyI6ZmFsc2UsIkNvbGxlY3Rpb25UeXBlQ1NTQ2xhc3MiOiJsYWJlbC10LXNlY3RvciIsIkxhbmd1YWdlQ1NTQ2xhc3MiOiJsYWJlbC1lbiJ9LHsiSWRlbnRpZmllciI6IjExLjEwMDIvMTAwMC8xMTQ2Ni1lbiIsIlRpdGxlIjoiSVRVLVQgSC4yNjQgKDAxLzIwMTIpIHwgSVNPL0lFQyAgMTQ0OTYtMTA6IEFkdmFuY2VkIHZpZGVvIGNvZGluZyBmb3IgZ2VuZXJpYyBhdWRpb3Zpc3VhbCBzZXJ2aWNlcyIsIkNvbGxlY3Rpb24iOnsiTmFtZSI6IklUVS1UIFJlY29tbWVuZGF0aW9ucyIsIlRpdGxlIjoiSVRVLVQgUmVjb21tZW5kYXRpb25zIiwiRGVzY3JpcHRpb24iOiIiLCJTZWN0b3IiOiJJVFUtVCIsIkdyb3VwIjoiUmVjb21tZW5kYXRpb25zIn0sIlJlZGlyZWN0aW9uIjoiaHR0cHM6Ly93d3cuaXR1LmludC9uZXQ0L0lUVS1UL3NlYXJjaC9hcGkvcmVkaXJlY3Rpb24/ZGVzdD1odHRwJTNBJTJGJTJGaGFuZGxlLml0dS5pbnQlMkYxMS4xMDAyJTJGMTAwMCUyRjExNDY2LWVuXHUwMDI2cG9zaXRpb249MVx1MDAyNnBhZ2U9MSIsIkxhbmd1YWdlIjoiZW4iLCJEaXIiOiJsdHIiLCJQcm9wZXJ0aWVzIjpbeyJUaXRsZSI6IlB1YmxpY2F0aW9uIGRhdGUiLCJWYWx1ZSI6IkF1Z3VzdCwgMjAxMiJ9XSwiRXh0cmFjdEZpbGVDb250ZW50IjoiLi4uYWdlIEguNzgw4oCTSC43ODkgICBGb3IgZnVydGhlciBkZXRhaWxzLCBwbGVhc2UgcmVmZXIgdG8gdGhlIGxpc3Qgb2YgSVRVLVQgUmVjb21tZW5kYXRpb25zLiAgICAgIFJlYy4gSVRVLVQgSC4yNjQgKDAxLzIwMTIpIGkgUmVjb21tZW5kYXRpb24gSVRVLVQgSC4yNjQgQWR2YW5jZWQgdmlkZW8gY29kaW5nIGZvciBnZW5lcmljIGF1ZGlvdmlzdWFsIHNlcnZpY2VzICBTdW1tLi4uIiwiTG9jYXRpb25zIjpbeyJJZCI6IjEiLCJUeXBlIjoicGRmIiwiSHJlZiI6Imh0dHBzOi8vd3d3Lml0dS5pbnQvbmV0NC9JVFUtVC9zZWFyY2gvYXBpL3JlZGlyZWN0aW9uP2Rlc3Q9aHR0cCUzQSUyRiUyRmhhbmRsZS5pdHUuaW50JTJGMTEuMTAwMiUyRjEwMDAlMkYxMTQ2Ni1lbiUzRmxvY2F0dCUzRGlkJTNBMSUyNmF1dGgiLCJSYXdIcmVmIjoiaHR0cDovL3d3dy5pdHUuaW50L3JlYy9kb2xvZ2luX3B1Yi5hc3A/bGFuZz1lXHUwMDI2aWQ9VC1SRUMtSC4yNjQtMjAxMjAxLVMhIVBERi1FXHUwMDI2dHlwZT1pdGVtcyIsIkljb24iOiJwZGYtaWNvbi5wbmcifSx7IklkIjoiMiIsIlR5cGUiOiJkb2MiLCJIcmVmIjoiaHR0cHM6Ly93d3cuaXR1LmludC9uZXQ0L0lUVS1UL3NlYXJjaC9hcGkvcmVkaXJlY3Rpb24/ZGVzdD1odHRwJTNBJTJGJTJGaGFuZGxlLml0dS5pbnQlMkYxMS4xMDAyJTJGMTAwMCUyRjExNDY2LWVuJTNGbG9jYXR0JTNEaWQlM0EyJTI2YXV0aCIsIlJhd0hyZWYiOiJodHRwOi8vd3d3Lml0dS5pbnQvcmVjL2RvbG9naW5fcHViLmFzcD9sYW5nPWVcdTAwMjZpZD1ULVJFQy1ILjI2NC0yMDEyMDEtUyEhTVNXLUVcdTAwMjZ0eXBlPWl0ZW1zIiwiSWNvbiI6ImRvYy1pY29uLnBuZyJ9XSwiVG9wUmVzdWx0IjpmYWxzZSwiV29yZHMiOnsiSVRVLVQiOnRydWUsIkguMjY0Ijp0cnVlfSwiTWVkaWEiOnsiSWRlbnRpZmllciI6IjExLjEwMDIvMTAwMC8xMTQ2Ni1lbiIsIkRhdGUiOiJBdWd1c3QsIDIwMTIiLCJVcmwiOm51bGwsIk5hbWUiOiJJVFUtVCBILjI2NCAoMDEvMjAxMikgfCBJU08vSUVDICAxNDQ5Ni0xMCIsIlBhcmVudEhhbmRsZUlEIjoiIiwiUGFyZW50TmFtZSI6bnVsbCwiVHlwZSI6bnVsbCwiQ29udGVudFRleHQiOm51bGwsIkltYWdlVXJsIjpudWxsLCJUYWdzIjpbXX0sIldvcmRzTWlzc2luZyI6ZmFsc2UsIkNvbGxlY3Rpb25UeXBlQ1NTQ2xhc3MiOiJsYWJlbC10LXNlY3RvciIsIkxhbmd1YWdlQ1NTQ2xhc3MiOiJsYWJlbC1lbiJ9XSwiaW5wdXQiOiJJVFUtVCBILjI2NCIsInRvdGFsQW1vdW50Ijo3NzgsImNvbGxhdGlvblF1ZXJ5IjoiIiwiYXR0ZW1wdCI6MCwibGFuZ3VhZ2VVcGRhdGVkIjpmYWxzZSwiYWxsb3dlZCI6dHJ1ZX0=
    http_version:
  recorded_at: Fri, 30 Oct 2020 17:11:42 GMT
- request:
    method: get
    uri: https://www.itu.int/net4/ITU-T/search/api/redirection?dest=http://handle.itu.int/11.1002/1000/13903-en&page=1&position=10
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 302
      message: Found
    headers:
      Connection:
      - Keep-Alive
      Content-Length:
      - '160'
      Date:
      - Fri, 30 Oct 2020 17:11:41 GMT
      Location:
      - http://handle.itu.int/11.1002/1000/13903-en
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/7.5
      Cache-Control:
      - private
      X-Aspnetmvc-Version:
      - '5.0'
      X-Aspnet-Version:
      - 4.0.30319
      Microsoftofficewebserver:
      - 5.0_Pub
      X-Powered-By:
      - ASP.NET
      Strict-Transport-Security:
      - max-age=31536000
    body:
      encoding: UTF-8
      string: "<html><head><title>Object moved</title></head><body>\r\n<h2>Object
        moved to <a href=\"http://handle.itu.int/11.1002/1000/13903-en\">here</a>.</h2>\r\n</body></html>\r\n"
    http_version:
  recorded_at: Fri, 30 Oct 2020 17:11:42 GMT
- request:
    method: get
    uri: http://handle.itu.int/11.1002/1000/13903-en
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - handle.itu.int
  response:
    status:
      code: 303
      message: ''
    headers:
      Location:
      - http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13903&lang=en
      Expires:
      - Sat, 31 Oct 2020 17:11:42 GMT
      Content-Type:
      - text/html;charset=utf-8
      Content-Length:
      - '227'
      Date:
      - Fri, 30 Oct 2020 17:11:42 GMT
    body:
      encoding: UTF-8
      string: |-
        <html><head><title>Handle Redirect</title></head>
        <body><a href="http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13903&amp;lang=en">http://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13903&amp;lang=en</a></body></html>
    http_version:
  recorded_at: Fri, 30 Oct 2020 17:11:42 GMT
- request:
    method: get
    uri: http://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=13903
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 301
      message: Moved Permanently
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{25E4F063-7DB2-4776-B16A-FEDE9926487A}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Content-Length:
      - '278'
      Date:
      - Fri, 30 Oct 2020 17:11:42 GMT
      Location:
      - https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13903&lang=en
      Content-Type:
      - text/html
      Server:
      - Microsoft-IIS/8.5
      X-Powered-By:
      - ASP.NET
    body:
      encoding: UTF-8
      string: "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\r\n<html><head>\r\n<title>301
        Moved Permanently</title>\r\n</head><body>\r\n<h1>Moved Permanently</h1><p>The
        document has moved <a href=\"https://www.itu.int/ITU-T/recommendations/rec.aspx?rec=13903&lang=en\">here</a>.</p>\n</body></html>"
    http_version:
  recorded_at: Fri, 30 Oct 2020 17:11:43 GMT
- request:
    method: get
    uri: https://www.itu.int/ITU-T/recommendations/rec.aspx?lang=en&rec=13903
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Transfer-Encoding:
      - chunked
      Date:
      - Fri, 30 Oct 2020 17:11:45 GMT
      Content-Type:
      - text/html; charset=utf-8
      Server:
      - Microsoft-IIS/10.0
      Cache-Control:
      - private
      X-Aspnet-Version:
      - 4.0.30319
      X-Powered-By:
      - ASP.NET
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 30 Oct 2020 17:11:46 GMT
- request:
    method: get
    uri: http://www.itu.int/dms_pubrec/itu-t/rec/h/T-REC-H.264-201906-I!!SUM-HTM-E.htm
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.itu.int
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - Keep-Alive
      Set-Cookie:
      - ISAWPLB{1E0831B9-794A-4084-8CD5-3AF688839E92}={05FDB0E1-BC10-478D-B370-08C2D103FFFC};
        HttpOnly; Path=/
      Transfer-Encoding:
      - chunked
      Date:
      - Fri, 30 Oct 2020 17:11:46 GMT
      Content-Type:
      - text/html
      Etag:
      - '"ff9e41b5c863d51:0"'
      Server:
      - Microsoft-IIS/8.5
      Accept-Ranges:
      - bytes
      Cache-Control:
      - private
      Last-Modified:
      - Thu, 05 Sep 2019 09:02:56 GMT
      X-Powered-By:
      - ASP.NET
      - ASP.NET
      X-Aspnet-Version:
      - 2.0.50727
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Fri, 30 Oct 2020 17:11:47 GMT
recorded_with: VCR 5.0.0
